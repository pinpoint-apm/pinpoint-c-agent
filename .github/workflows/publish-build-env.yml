name: publish-build-env

on: 
  release:
  workflow_dispatch:


jobs:

  golang-build-env-1-13:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build the golang-build-env Docker image
      run: |
        IMAGE_ID=ghcr.io/$GITHUB_REPOSITORY
        IMAGE_NAME=golang-build-env-1.13
        docker build --pull --no-cache . --file common/Dockerfile --tag $IMAGE_NAME

        IMAGE_TAG=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && IMAGE_TAG=$(echo $IMAGE_TAG | sed -e 's/^v//')

        docker tag $IMAGE_NAME $IMAGE_ID/$IMAGE_NAME:$IMAGE_TAG
        docker tag $IMAGE_NAME $IMAGE_ID/$IMAGE_NAME:latest
        docker push --all-tags $IMAGE_ID/$IMAGE_NAME

  golang-build-env-1-16:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build the golang-build-env Docker image
      run: |
        IMAGE_ID=ghcr.io/$GITHUB_REPOSITORY
        IMAGE_NAME=golang-build-env-1.16
        docker build --pull --no-cache . --file common/Go1.16.Dockerfile --tag $IMAGE_NAME

        IMAGE_TAG=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && IMAGE_TAG=$(echo $IMAGE_TAG | sed -e 's/^v//')

        docker tag $IMAGE_NAME $IMAGE_ID/$IMAGE_NAME:$IMAGE_TAG
        docker tag $IMAGE_NAME $IMAGE_ID/$IMAGE_NAME:latest
        docker push --all-tags $IMAGE_ID/$IMAGE_NAME