name: publish

on: 
  release:
    types: [workflow_dispatch]
  workflow_dispatch:

jobs:
  collector-agent:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build the collector-agent Docker image
      run: |
        docker build collector-agent --tag ghcr.io/$GITHUB_REPOSITORY/collector-agent:latest
        docker push ghcr.io/$GITHUB_REPOSITORY/collector-agent:latest

  golang-build-env-1-13:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build the golang-build-env Docker image
      run: |
        docker build -t ghcr.io/$GITHUB_REPOSITORY/golang-build-env-1.13:latest -f common/Dockerfile .
        docker push ghcr.io/$GITHUB_REPOSITORY/golang-build-env-1.13:latest

  golang-build-env-1-16:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build the golang-build-env Docker image
      run: |
        docker build -t ghcr.io/$GITHUB_REPOSITORY/golang-build-env-1.16:latest -f common/Go1.16.Dockerfile .
        docker push ghcr.io/$GITHUB_REPOSITORY/golang-build-env-1.16:latest

  pinpointPy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine
      - name: package
        run: |
          rm setup.py
          ln -s setup_pypi.py setup.py
          python setup.py sdist
          twine check dist/*
      - name: Publish package pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pinpointPy }}