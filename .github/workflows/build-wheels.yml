name: build-wheels

on:
  workflow_dispatch:
    inputs:
      release-testpypi:
        description: Do you want to release to test-pypi
        required: true
        default: true
        type: boolean
      release:
        description: Do you want to release to pypi
        required: true
        default: false
        type: boolean

jobs:
  build_wheels_pypitest:
    name: Build test wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: ${{ inputs.release-testpypi }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      - name: rename file
        run: |
          cp setup_pypi_test.py setup.py

      - uses: actions/setup-python@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Release dist
        if: runner.os == 'Linux'
        run: |
          pip install build
          python -m build -s --outdir wheelhouse

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_ARCHS_WINDOWS: ARM64 AMD64 x86
          CIBW_ARCHS_MACOS: auto x86_64 arm64

      - uses: actions/upload-artifact@v3
        with:
          name: pypi_test
          path: ./wheelhouse/*

  publish-pypitest:
    needs: build_wheels_pypitest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: pypi_test
          path: ./wheelhouse/

      - name: show all artifact
        run: |
          ls -R ./wheelhouse/

      - name: Publish package to pypitest
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.EELIUTEST }}
          packages_dir: ./wheelhouse/
          repository_url: https://test.pypi.org/legacy/

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: ${{ inputs.release-testpypi }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      - name: rename file
        run: |
          cp setup_pypi_test.py setup.py

      - uses: actions/setup-python@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Release dist
        if: runner.os == 'Linux'
        run: |
          pip install build
          python -m build -s --outdir wheelhouse

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_ARCHS_WINDOWS: ARM64 AMD64 x86
          CIBW_ARCHS_MACOS: auto x86_64 arm64

      - uses: actions/upload-artifact@v3
        with:
          name: pypi
          path: ./wheelhouse/*

  publish:
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: pypi
          path: ./wheelhouse/

      - name: show all artifact
        run: |
          ls -R ./wheelhouse/

      - name: Publish package to pypitest
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PINPOINTPY }}
          packages_dir: ./wheelhouse/
