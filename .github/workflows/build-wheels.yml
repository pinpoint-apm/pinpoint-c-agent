name: build-wheels

on: 
  workflow_dispatch:
    inputs:
      release-testpypi:
        description: Do you want to release to test-pypi
        required: true
        default: "true"
      release:
        description: Do you want to release to pypi
        required: true
        default: "false"

jobs:
  build_wheels_pypitest:
    if: ${{ github.event.inputs.release-testpypi }} == "true"
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest]

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: set test version
        run: |
          rm setup.py
          ln -s setup_pypi_test.py setup.py

      # - name: Set up QEMU
      #   if: runner.os == 'Linux'
      #   uses: docker/setup-qemu-action@v3
      #   with:
      #     platforms: all

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.0

      # - name: Build wheels
      #   uses: pypa/cibuildwheel@v2.16.0
      #   env:
      #     # configure cibuildwheel to build native archs ('auto'), and some
      #     # emulated ones
      #     CIBW_ARCHS_LINUX: auto aarch64 ppc64le s390x

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          # CIBW_ARCHS_LINUX: "auto aarch64"

      - uses: actions/upload-artifact@v3
        with:
          name: pypi_test
          path: ./wheelhouse/*.whl

  publish-pypitest:
    needs: build_wheels_pypitest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with: 
          name: pypi_test
          path: ./wheelhouse/

      - name: show all artifact
        run: |
          ls -R ./wheelhouse/
  
      - name: Publish package to pypitest
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.EELIUTEST }}
          packages_dir: ./wheelhouse/  
          repository_url: https://test.pypi.org/legacy/          

  build_wheels:
    if: ${{ github.event.inputs.release }} == "true"
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest]

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      # - name: Set up QEMU
      #   if: runner.os == 'Linux'
      #   uses: docker/setup-qemu-action@v3
      #   with:
      #     platforms: all

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.0

      # - name: Build wheels
      #   uses: pypa/cibuildwheel@v2.16.0
      #   env:
      #     # configure cibuildwheel to build native archs ('auto'), and some
      #     # emulated ones
      #     CIBW_ARCHS_LINUX: auto aarch64 ppc64le s390x

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          # CIBW_ARCHS_LINUX: "auto aarch64"

      - uses: actions/upload-artifact@v3
        with:
          name: pypi
          path: ./wheelhouse/*.whl          

  publish:
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with: 
          name: pypi
          path: ./wheelhouse/

      - name: show all artifact
        run: |
          ls -R ./wheelhouse/
  
      - name: Publish package to pypitest
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PINPOINTPY }}
          packages_dir: ./wheelhouse/       
